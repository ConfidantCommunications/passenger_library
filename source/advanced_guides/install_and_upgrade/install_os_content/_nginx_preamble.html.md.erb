Before you begin, you should know that installing Passenger in its Nginx integration mode involves extending Nginx with code from Passenger. However, Nginx does not support loadable modules. This means that in order to install Passenger's Nginx integration mode, it is necessary to **recompile Nginx from source**. And that is exactly what we will do in this installation guide.

The fact that Nginx needs to be recompiled, has some implications:

 * Many users installed Nginx using their operating system's package manager (yum, apt-get, etc). This Nginx is usually located in /usr/sbin/nginx, with configuration file /etc/nginx/nginx.conf. However, if you install Nginx from source, then you will end up with **another** Nginx installation (that has Passenger enabled) that is located somewhere else. This other Nginx installation does not look for its /etc/nginx/nginx.conf, but somewhere else.

   Some people get confused by having two Nginx installations and end up editing the wrong config file. To avoid confusion, this guide will recommend you to uninstall the OS-installed Nginx before proceeding.

 * Init scripts, e.g. `/etc/init.d/nginx` and `service nginx restart`, are not provided by the default Nginx source code. Init scripts are actually extensions provided by the operating system's Nginx package. If you install Nginx from source, then you can't use init scripts to control Nginx anymore. Instead, you will use more generic operating system primitives to control Nginx, such as PID files and signals. Don't worry, this installation guide will teach you.

If you do not like having to recompile Nginx then there are several alternatives you can choose:

 1. Use the Phusion Passenger [APT repository](<%= url_for "/install/nginx/apt_repo/index.html" %>) (for Debian, Ubuntu) or the [YUM repository](<%= url_for "/install/nginx/yum_repo/index.html" %>) (RPMs for Enterprise Linux) to install Passenger and Nginx. Through our APT/YUM repository, we provide a Passenger-enabled Nginx package that uses the same structure as the Nginx package provided by the OS. This means that you will be able to use the `service` script, your config files are at places where you expect them, etc.
 2. Consider [using Passenger Standalone in a reverse proxy configuration to Nginx](<%= url_for "/deploy/standalone/reverse_proxy.html" %>). Passenger Standalone + reverse proxy is fully supported and supports the same features as Passenger's Nginx integration mode.

If you understand this and choose to use Passenger with its Nginx integration mode, then read on. :-)
