<% step = 0 %>

<% if integration_mode_type == :nginx %>
  <h2 id="note_about_nginx">Before you begin: a note about Nginx</h2>
  <%= render_partial("/install/install/shared/nginx_preamble", locals: locals) %>
<% end %>

<h2>Installation</h2>

<% if edition_type == :enterprise %>
  <%=
  result = {}
  output = render_partial("/install/install/shared/enterprise_preamble",
    locals: locals.merge(result: result, heading_level: 3))
  step = result[:step]
  output
  %>
  <div class="alert alert-info" role="alert" style="margin: 4em 0">From this point on, all commands that you run are supposed to be run on the production server, not on your local computer.</div>
<% end %>

<% step += 1 %>
<h3>Step <%= step %>: install gem</h3>
<% if edition_type == :oss %>
  <p>Install the Passenger gem with:</p>
  <pre class="highlight"><span class="prompt">$ </span>gem install passenger --no-rdoc --no-ri</pre>
  <p>The <code>--no-rdoc --no-ri</code> argument isn't really necessary, but it makes installation faster by skipping generation of API documentation.</p>

  <div class="note">
    Did <code>gem install</code> abort with a "permission denied" error? Then re-run it with
    <% if rvm %>
      <code>rvmsudo</code>.

      <p>
        Since you are using RVM, don't use <code>sudo</code>! Always use <code>rvmsudo</code> instead when executing Ruby-related commands! <a href="https://rvm.io/integration/sudo">Learn more about rvmsudo at the RVM website.</a>
      </p>
    <% else %>
      <code>sudo</code>.
    <% end %>
  </div>
<% else %>
  <p>Add the Passenger Enterprise gem server to your RubyGems source list:</p>
  <pre class="highlight"><span class="prompt">$ </span>unset HISTFILE
<span class="prompt">$ </span>gem source --add https://download:<span class="si">YOUR_DOWNLOAD_TOKEN</span>@www.phusionpassenger.com/enterprise_gems/</pre>
  <p>Substitute <code>YOUR_DOWNLOAD_TOKEN</code> with the one you found in the Customer Area. And notice the <strong>trailing slash</strong> in the URL! It is very important.</p>
  <p>Finally, install Passenger Enterprise gem with:</p>
  <pre class="highlight"><span class="prompt">$ </span>gem install passenger-enterprise-server --no-rdoc --no-ri</pre>
  <p>The <code>--no-rdoc --no-ri</code> argument isn't really necessary, but it makes installation faster by skipping generation of API documentation.</p>

  <div class="note">
    Did any of the previous commands abort with a "permission denied" error? Then re-run that command with
    <% if rvm %>
      <code>rvmsudo</code>.

      <p>
        Since you are using RVM, don't use <code>sudo</code>! Always use <code>rvmsudo</code> instead when executing Ruby-related commands! <a href="https://rvm.io/integration/sudo">Learn more about rvmsudo at the RVM website.</a>
      </p>
    <% else %>
      <code>sudo</code>.
    <% end %>
  </div>
<% end %>

<% if integration_mode_type == :apache %>
  <% step += 1 %>
  <h3>Step <%= step %>: run the Passenger Apache module installer</h3>
  <p>
    Run the Passenger Apache module installer and follow the on-screen instructions:
  </p>
  <pre class="highlight">passenger-install-apache2-module</pre>

  <p>
    At the end of the installation process, you will be asked to copy and paste a configuration snippet (containing <code>LoadModule</code>, <code>PassengerRoot</code>, etc.) into your Apache configuration file.
  </p>
  <p>
    Different operating systems and Apache installations have different conventions with regard to where the Apache configuration file is and how it is organized. Please read <a href="<%= url_for '/advanced_guides/install_and_upgrade/apache/working_with_the_apache_config_file.html' %>">Working with the Apache configuration file</a> if you are not familiar with it. That page is especially of interest for macOS Server &ge; 10.8 users because the configuration file may be at a surprising location.
  </p>
<% elsif integration_mode_type == :nginx %>
  <% step += 1 %>
  <h3>Step <%= step %> (optional): uninstall the OS-installed Nginx</h3>
  <%= render_partial("/install/install/shared/uninstall_nginx_os_package", locals: locals) %>

  <% step += 1 %>
  <h3>Step <%= step %>: run the Passenger Nginx module installer</h3>
  <p>
    Run the Passenger Nginx module installer and follow the on-screen instructions:
  </p>
  <pre class="highlight"><span class="prompt">$ </span>passenger-install-nginx-module</pre>
<% end %>

<% step += 1 %>
<h3>Step <%= step %>: validate installation</h3>
<%= render_partial("/install/install/shared/postinstall_check",
      locals: locals.merge(apache_process_name: "apache2",
      sudo: rvm ? "rvmsudo" : "sudo")) %>

<% if integration_mode_type == :nginx %>
  <h2 id="using_nginx">Using Nginx</h2>
  <%= render_partial("/install/install/shared/using_nginx", locals: locals) %>
<% end %>

<h2>FAQ</h2>
<% if rvm %>
  <h3>I have multiple Ruby versions or gemsets. Does it matter which one I use to install Passenger with?</h3>
  <p>
    Not really. Passenger doesn't care which Ruby you used to install it; it can still serve Ruby apps with any Ruby version, as long as you tell Passenger which Ruby interpreter you want to use.
  </p>
  <!-- TODO: fix link -->
  <% if integration_mode_type == :apache %>
    <p>You tell Passenger which Ruby interpreter to use for a specific app, by using the <a href="<%= url_for "/references/config_reference/apache/index.html" %>#passengerruby">PassengerRuby</a> directive. This can be customized on a per-application basis.</p>
  <% elsif integration_mode_type == :nginx %>
    <p>You tell Passenger which Ruby interpreter to use for a specific app, by using the <a href="<%= url_for "/references/config_reference/nginx/index.html" %>#passenger_ruby">passenger_ruby</a> directive. This can be customized on a per-application basis.</p>
  <% else %>
    <p>You tell Passenger which Ruby interpreter to use by using the <code>--ruby</code> command line option.</p>
  <% end %>
  <p>
    Please also read <a data-no_rewrite href="<%= url_for '/advanced_guides/in_depth/ruby/multiple_rubies.html' %>">How having multiple Ruby interpreters affects Passenger</a>. In particular, read the RVM-related caveats.
  </p>
<% end %>
<% if integration_mode_type == :nginx %>
  <%= render_partial("/install/install/shared/nginx_faq", locals: locals) %>
<% end %>
<%= render_partial("/install/install/shared/source_compilation_faq", locals: locals) %>
